plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

mainClassName = 'io.confluent.ps.tools.GatKafkaData'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

sourceCompatibility = 1.8
targetCompatibility = 1.8
group 'io.confluent.ps.tools'
version '0.1'

dependencies {
    // Use JUnit test framework.
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
    implementation 'org.apache.kafka:kafka-clients:3.4.0'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.14.2'

    // https://mvnrepository.com/artifact/info.picocli/picocli
    implementation 'info.picocli:picocli:4.7.1'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation 'org.slf4j:slf4j-api:2.0.6'
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'com.jayway.jsonpath:json-path:2.7.0'
    implementation 'org.slf4j:slf4j-simple:2.0.6'
    implementation group: 'net.wushilin', name: 'envawareproperties', version: '1.0.6'
    implementation 'org.eclipse.angus:angus-mail:2.0.1'
}

jar {
    zip64 true
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
    manifest {
        attributes(
                'Main-Class': 'io.confluent.ps.tools.GetKafkaClusterData'
        )
    }
}
application {
    // Define the main class for the application.
    mainClass = 'io.confluent.ps.tools.GetKafkaClusterData'
}

